/* ==========================================================================
   CSS Selectors
   ========================================================================== */

selector {
  property: value; 
  <- declaration ->  
}

<link rel="stylesheet" href="" media="screen/print">



/* Basic Selectors
   ========================================================================== */

* {} /* Universal Selector */

div p {} /* Descendent Selector */

div > p {} /* Child Selector */

div + p {} /* Adjacent Sibling Selector */

div ~ p {} /* General Sibling Selector */

[title] {} /* Attribute Selector */



/* Substring Matching Attribute Selectors
   ========================================================================== */

a[href^="http://"] {} /* 'Begins with' Selector */

a[href$=".ext"] {} /* 'Ends with' Selector */

a[href*=""] {} /* 'Contains' Selector */

a[href~=""] {} /* 'Space Separted' Selector



/* Pseudo-classes
   ========================================================================== */

:link {}

:visited {}

:hover {}

:active {}

:focus {}



/* Structural Pseudo-classes
   ========================================================================== */

:first-child {}

:last-child {}

/**
 * :nth-child selects elements based on their positions within a parent element's list of child elements.
 * Expression syntax = an+b
 * The 'b' value determines the first element selected.
 * The 'a' value determines the cycle of elements to select after the first one has been selected.
 * Think of 'n' as a counter that starts at zero and it indicates the a value to the browser.
 */

:nth-child(even,odd,an+b) {}

:nth-last-child() {}

:nth-of-type(even,odd,integer) {} /* Selects an element base on its position within a parent elements list of child elements of the same type. */

:nth-last-of-type() {}

:first-of-type {}

:last-of-type {}

:only-child {}

:only-of-type {}

:root {} /* Selects the element that is the root of the document. Has a higher specificity than the html. */

:target {}

:empty {} /* Selects elements that have no child elements or content. */



/* ui element states
   ========================================================================== */

:enabled {}

:disabled {}

:checked {}

:not /* Negation Pseudo-class selects everything except the element specified. */



/* pseudo elements
   ========================================================================== */

:first-line {}

:first-letter {}

:before {
	content: " "; /* Required */
}

:after {
	content: " "; /* Required */
}




/* ==========================================================================
   https://github.com/necolas/idiomatic-css#comments
   ========================================================================== */

/* Sub-section comment block
   ========================================================================== */

/**
 * Short description using Doxygen-style comment format
 *
 * The first sentence of the long description starts here and continues on this
 * line for a while finally concluding here at the end of this paragraph.
 *
 * The long description is ideal for more detailed explanations and
 * documentation. It can include example HTML, URLs, or any other information
 * that is deemed necessary or useful.
 *
 * @tag This is a tag named 'tag'
 *
 * TODO: This is a todo statement that describes an atomic task to be completed
 *   at a later date. It wraps after 80 characters and following lines are
 *   indented by 2 spaces.
 */

/* Basic comment */



